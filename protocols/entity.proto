/*
Author: 闫刚 (yes7rose@sina.com)
entity.proto (c) 2020
Desc: 实体一般操作
Created:  2020-09-24T00:51:49.780Z
Modified: !date!
*/

syntax = "proto3";
package cashmere;

import "name.proto";

message Entity{
  string id = 1;
  Name name = 2;
  string creator_id = 3;
  string create_timestamp = 4;
  string modifier_id = 5;
  string modify_timestamp = 6;
  string owner_id = 7;
  repeated string groups = 8;
  repeated string data_ids = 9;
  repeated string comment_ids=  10;
  bool removed = 11;
  repeated string removed_data_ids = 12;
}

// 变更物主
message ChangeEntityOwnerRequest
{
  int32 manage_id = 1;
  string entity_id = 2;
  string old_owner_id = 3;
  string new_owner_id = 4;
}
message ChangeEntityOwnerResponse
{
  string result = 1;
}

// 太通用，不建议开放
message NewEntityRequest {
  int32 manage_id = 1;
  bytes data = 2;
}
message NewEntityResponse {
  string result = 1;
}

// 不建议开放
message EditEntityRequest {
  int32 manage_id = 1;
  string entity_id = 2;
  // {field_id:value, ...}
  bytes data = 3;
}
message EditEntityResponse {
  string result = 1;
}

// 编辑操作类型
enum EditOperationTypeEnum {
  // {field_id:value}
  EDIT_PRIMARY_FIELD = 0;
  // {field_id:{"key":value}}
  EIDT_MAP_FIELD = 1;
  // {field_id:"key"}
  EDIT_MAP_FIELD_REMOVE_KEY = 2;
  // {field_id:[value, ...]}
  EDIT_ADD_TO_ARRAY_FIELD = 3;
  // {field_id:{"index": index, "value":value}}
  Edit_UPDATE_ARRAY_ELEMENT_FIELD = 5;
  // {field_id:[value, ...]}
  EDIT_REMOVE_FROM_ARRAY_FIELD = 4;
}

message EntityFieldEdit {
    int32 manage_id = 1;
    string entity_id = 2;
    string field_id = 3;
    EditOperationTypeEnum operation_type = 4;
    // 修改, 使用bson Document格式表示，如：{field_id:value}
    bytes edit = 5;
}

// 支持多实体多属性一次提交，如果是单实体单属性编辑提交，也可以使用下面单属性编辑接口
message EditMultiEntityFieldsRequest{
  repeated EntityFieldEdit edits = 1;
}
message EditMultiEntityFieldsResponse{
  // 成功返回"ok"
  string result = 1;
}

// 编辑单个字段
message EditEntityFieldRequest {
    int32 manage_id = 1;
    string entity_id = 2;
    string field_id = 3;
    // {field_id:value}
    bytes new_value = 4;
  }
message EditEntityFieldResponse {
  // 成功返回新值
  string result = 1;
}

// 编辑MAP字段中的某个属性
message EditEntityMapFieldRequest {
    int32 manage_id = 1;
    string entity_id = 2;
    string field_id = 3;
    string key = 4;
    // {key:value}
    bytes new_value = 5;
  }
message EditEntityMapFieldResponse {
  // 成功返回新值
  string result = 1;
}

// 通用修改MAP移除key
message EditEntityMapFieldRemoveKeyRequest {
    int32 manage_id = 1;
    string entity_id = 2;
    string field_id = 3;
    string key = 4;
  }
message EditEntityMapFieldRemoveKeyResponse {
  // 成功返回key
  string result = 1;
}

// 通用修改List实体属性, 添加成员
message EditEntityArrayFieldAddItemsRequest {
    int32 manage_id = 1;
    string entity_id = 2;
    string field_id = 3;
    // {field_id:[items]}
    bytes items = 4;
  }
message EditEntityArrayFieldAddItemsResponse {
  // 成功返回"ok"
  string result = 1;
}

// 通用修改List实体属性, 移除物体
message EditEntityArrayFieldRemoveItemsRequest {
    int32 manage_id = 1;
    string entity_id = 2;
    string field_id = 3;
    // {field_id:[items]}
    bytes items = 4;
  }
message EditEntityArrayFieldRemoveItemsResponse {
  // 成功返回"ok"
  string result = 1;
}


// 依据id取得单个实体
message GetEntityRequest {
    int32 manage_id = 1;
    string entity_id = 2;
}
message GetEntityResponse {
    bytes entity = 1;
}

// 依据id列表取得多个实体
message GetEntitiesRequest {
    int32 manage_id = 1;
    // 列表最长100, 根据需要指定长度
    repeated string entity_ids = 2;
}
message GetEntitiesResponse {
    repeated bytes entities = 1;
}

// 依据页码取得实体页列表，页码从1开始
// 需要先取得实体总数，然后计算页数
message GetEntitiesPageRequest {
  int32 manage_id = 1;
  uint32 page_index = 2;
  bytes conditions = 3;
}
message GetEntitiesPageResponse {
  repeated bytes entities = 1;
}

// 标记实体已移除
message MarkEntityRemovedRequest {
  int32 manage_id = 1;
  string entity_id = 2;
}
message MarkEntityRemovedResponse {
  // 成功返回"ok"
  string result = 1;
}

// 恢复标记为已移除的实体
message RecoverRemovedEntityRequest {
  int32 manage_id = 1;
  string entity_id = 2;
}
message RecoverRemovedEntityResponse {
  // 成功返回"ok"
  string result = 1;
}

// 取得已删除实体页
message GetRemovedEntitiesPageRequest {
  int32 manage_id = 1;
  uint32 page_index = 2;
  bytes conditions = 3;
}
message GetRemovedEntitiesPageResponse {
  repeated bytes entities = 1;
}

// 取得实体已标记移除数据表
message GetRemovedDataListRequest{
  string manage_id = 1;
  string entity_id = 2;
  string data_id = 3;
}
message GetRemovedDataListResponse{
  repeated string data_ids = 1;
}


// ---------
// 更新检查
// ---------
message EntityTimestamp {
  string entity_id = 1;
  // 格式二进制 bson Document 形式{"value": Timestamp()}
  bytes timestamp = 2;
}

// 检查实体是否有更新，返回有更新的实体
message CheckEntitiesUpdateRequest {
  int32 manage_id = 1;
  // 列表最长不能超过100
  repeated EntityTimestamp entities = 2;
}
message CheckEntitiesUpdateResponse {
  // 如果有则返回bson新实体，否则返回空
  repeated bytes entities = 1;
}

// 检查迟于指定时间是否有更新
// 返回编号列表页流
message CheckUpdatesLaterThenTimeRequest {
  int32 manage_id = 1;
  // 格式二进制 bson Document 形式{"value": Timestamp()}
  bytes timestamp = 2;
  // 是否按时间升序排列, 默认降序
  bool ascending_order = 3;
}
message CheckUpdatesLaterThenTimeResponse {
  // 分组返回，每组最多20条
  // 最多返回1000条
  repeated string entity_ids = 1;
}
